//Accessin user data requires uid (not good).
//Accessing feed content requires password (good).

path /users/$user is User {
	read() = isSignedUser();
	write() = isCurrentUser($user);
}

path /feeds/$feed is Feed {
	read() = isFeedUser($feed);
	write() = isNew(this) || isFeedUser($feed);
}

path /users/$user/feeds/$feed is Boolean {
	validate() = root.feeds[$feed].users[$user] != null;
}

path /feeds/$feed/users/$user is Password {
	write() = this == root.feeds[$feed].password;
	validate() = root.users[$feed].feeds[$user] != null;
}

path /posts/$feed {
	read() = isFeedUser($feed);
	write() = isFeedUser($feed);
}

path /posts/$feed/$post is Search | Page;

type User {
  	name: String,
  	image: String,
  	feed: FeedId | Null
}

type Feed {
	name: String,
	password: Password
}

type Post {
	kind: String,
	user: UserId,
	time: Number,
	ancestor: String | Null
}

type Search extends Post {
	url: String,
	query: String,

	validate() = isKind(this, 'search') && isAncestorKind(this, null);
}

type Page extends Post {
	url: String,
	title: String,

	validate() = isKind(this, 'page') && (isAncestorKind(this, null) || isAncestorKind(this, 'search'));
}

type Text extends Post {
	text: String,

	validate() = isKind(this, 'text') && isAncestorKind(this, 'page');
}

type Image extends Post {
	image: String,

	validate() = isKind(this, 'text') && isAncestorKind(this, 'page');
}

type Comment extends Post {
	text: String,

	validate() = isKind(this, 'comment') && !isAncestorKind(this, null) && !isAncestorKind(this, 'comment');
}

type UserId extends String {
	validate() = root.users[this] != null;
}

type FeedId extends String {
	validate() = root.feeds[this] != null;
}

type Password extends String;


isKind(post, kind) = post.kind == kind;

getAncestorKind(post) = post.parent().ancestor.kind;

isAncestorKind(post, kind) = getAncestorKind(post) == kind;


isSignedUser() = auth != null;

isCurrentUser(user) = isSignedUser() && auth.uid == user;

isFeedUser(feed) = isSignedUser() && root.feeds[feed].users[auth.uid] == root.feeds[feed].password;

isNew(ref) = prior(ref) == null;