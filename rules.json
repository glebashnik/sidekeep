{
  "rules": {
    "users": {
      "$userId": {
        ".validate": "newData.hasChildren(['name', 'image'])",
        "name": {
          ".validate": "newData.isString()"
        },
        "image": {
          ".validate": "newData.isString()"
        },
        "selectedFeed": {
          ".validate": "newData.isString() || newData.val() == null"
        },
        "feeds": {
          "$key1": {
            ".validate": "newData.isBoolean()"
          }
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null",
        ".write": "auth != null && auth.uid == $userId"
      }
    },
    "feeds": {
      "$feedId": {
        ".validate": "newData.hasChildren(['name', 'timestamp', 'password'])",
        "name": {
          ".validate": "newData.isString()"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "password": {
          ".validate": "data.val() == null || newData.val() == data.val()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null && root.child('feeds').child($feedId).child('users').child(auth.uid).val() == root.child('feeds').child($feedId).child('password').val()",
        ".write": "data.val() == null || auth != null && newData.parent().parent().child('feeds').child($feedId).child('users').child(auth.uid).val() == newData.parent().parent().child('feeds').child($feedId).child('password').val()",
        "users": {
          "$userId": {
            ".validate": "newData.isString() && newData.val() == newData.parent().parent().parent().parent().child('feeds').child($feedId).child('password').val()",
            ".write": "auth != null && auth.uid == $userId"
          }
        }
      }
    },
    "posts": {
      "$feedId": {
        ".read": "auth != null && root.child('feeds').child($feedId).child('users').child(auth.uid).val() == root.child('feeds').child($feedId).child('password').val()",
        ".write": "auth != null && newData.parent().parent().child('feeds').child($feedId).child('users').child(auth.uid).val() == newData.parent().parent().child('feeds').child($feedId).child('password').val()",
        "$postId": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['type', 'user', 'timestamp', 'ancestor']) && newData.hasChildren(['url', 'query']) && newData.child('type').val() == 'search' && ('root' == 'root' || newData.parent().child(newData.child('ancestor').val()).child('type').val() == 'root') || newData.hasChildren() && newData.hasChildren(['type', 'user', 'timestamp', 'ancestor']) && newData.hasChildren(['url', 'title', 'favIconUrl']) && newData.child('type').val() == 'page' && ('root' == 'root' || newData.parent().child(newData.child('ancestor').val()).child('type').val() == 'root' || ('search' == 'root' || newData.parent().child(newData.child('ancestor').val()).child('type').val() == 'search')) || newData.hasChildren() && newData.hasChildren(['type', 'user', 'timestamp', 'ancestor']) && newData.hasChildren(['text']) && newData.child('type').val() == 'text' && ('page' == 'root' || newData.parent().child(newData.child('ancestor').val()).child('type').val() == 'page') || newData.hasChildren() && newData.hasChildren(['type', 'user', 'timestamp', 'ancestor']) && newData.hasChildren(['image']) && newData.child('type').val() == 'image' && ('page' == 'root' || newData.parent().child(newData.child('ancestor').val()).child('type').val() == 'page') || newData.hasChildren() && newData.hasChildren(['type', 'user', 'timestamp', 'ancestor']) && newData.hasChildren(['text']) && newData.child('type').val() == 'comment'",
          "type": {
            ".validate": "newData.isString() || newData.isString() || newData.isString() || newData.isString() || newData.isString()"
          },
          "user": {
            ".validate": "newData.isString() && newData.parent().parent().parent().parent().child('users').child(newData.val()).val() != null || newData.isString() && newData.parent().parent().parent().parent().child('users').child(newData.val()).val() != null || newData.isString() && newData.parent().parent().parent().parent().child('users').child(newData.val()).val() != null || newData.isString() && newData.parent().parent().parent().parent().child('users').child(newData.val()).val() != null || newData.isString() && newData.parent().parent().parent().parent().child('users').child(newData.val()).val() != null"
          },
          "timestamp": {
            ".validate": "newData.isNumber() || newData.isNumber() || newData.isNumber() || newData.isNumber() || newData.isNumber()"
          },
          "ancestor": {
            ".validate": "newData.isString() && (newData.val() == 'root' || newData.parent().parent().child(newData.val()).val() != null) || newData.isString() && (newData.val() == 'root' || newData.parent().parent().child(newData.val()).val() != null) || newData.isString() && (newData.val() == 'root' || newData.parent().parent().child(newData.val()).val() != null) || newData.isString() && (newData.val() == 'root' || newData.parent().parent().child(newData.val()).val() != null) || newData.isString() && (newData.val() == 'root' || newData.parent().parent().child(newData.val()).val() != null)"
          },
          "$other": {
            ".validate": "false"
          },
          "url": {
            ".validate": "newData.isString() || newData.isString()"
          },
          "query": {
            ".validate": "newData.isString()"
          },
          "title": {
            ".validate": "newData.isString()"
          },
          "favIconUrl": {
            ".validate": "newData.isString()"
          },
          "text": {
            ".validate": "newData.isString() || newData.isString()"
          },
          "image": {
            ".validate": "newData.isString()"
          }
        }
      }
    }
  }
}
